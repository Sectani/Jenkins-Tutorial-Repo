# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file simple-maven-project/pom.xml

  create-pull-request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
      - uses: actions/checkout@v4
      
      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v4
        with:
          #token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          title: 'Automated Pull Request from dev to master'
          body: 'This PR is automatically created by a GitHub Action to merge changes from dev to master.'
          draft: false

  merge-pull-request:
    needs: create-pull-request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
      - uses: actions/checkout@v4

      - name: Merge Pull Request
        id: merge_pr
        uses: actions/github-script@v6
        with:
          #github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = parseInt('${{ steps.create_pr.outputs.pull-request-number }}', 10);

            const response = await github.pulls.merge({
              owner,
              repo,
              pull_number: prNumber,
              merge_method: 'squash'
            });

            if (!response.data.merged) {
              throw new Error(`Failed to merge PR: ${response.data.message}`);
            }
